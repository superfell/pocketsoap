<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v3.5 NT (http://www.xmlspy.com) by Chris Sells (DevelopMentor) -->
<Library>
	<Description>This is a description of the API, as a whole.  This content will probably be linked to, by more extensive, hand-written content.</Description>
	<Interfaces>
		<Interface name="IFoo">
			<Short>short description of the IFoo interface</Short>
			<Description>This is a long description of the IFoo interface.  Interesting, eh?  Doesn't it look good with its <![CDATA[<b>bold</b> and <i>italic</i> highlights?

]]>Why does this interface exist?  Who would use it, and how?  Nobody cares... it's imaginary.  This text is only here to get a feel for how this tool's final output will look.</Description>
			<WhenToCall>The system uses this interface to access your object's fooness -- applications typically do not call this interface directly.</WhenToCall>
			<WhenToImpl>This interface must be implemented on all objects that support fooness.</WhenToImpl>
			<Methods>
				<Method name="Foo">
					<Short>short description of the Foo method</Short>
					<Description>This is a long description of the Foo method.</Description>
					<Parameters>
						<Parameter name="sFoo">this string must be set to "Hello, World!"</Parameter>
					</Parameters>
					<ReturnValue>This method can return all kinds of silly HRESULTs -- nobody cares.</ReturnValue>
					<SampleCode><![CDATA[HRESULT Foo(BSTR sFoo) {
   // ...do something interesting here...
   return E_NOTIMPL;
   }]]></SampleCode>
					<Links>
						<Link href="../whatever/something.html">Some other interesting method</Link>
					</Links>
				</Method>
				<Method name="CreateBar">
					<Short>short description of the CreateBar method</Short>
					<Description>This is a long description of the CreateBar method.</Description>
					<Parameters>
						<Parameter name="ppBar">pointer to the newly created Bar object</Parameter>
					</Parameters>
					<ReturnValue>This method can return all kinds of silly HRESULTs -- nobody cares.</ReturnValue>
					<SampleCode><![CDATA[yadda]]></SampleCode>
					<Links>
						<Link href="../whatever/something.html">Some other interesting method</Link>
					</Links>
				</Method>
			</Methods>
			<Links>
				<Link href="../whatever/something.html">Some other interesting interface</Link>
			</Links>
		</Interface>
		<Interface name="IBar">
			<Short>this is a short description of the IBar interface</Short>
			<Description>This is a long, lengthy, verbose description of the IBar interface.</Description>
			<WhenToCall>whatever</WhenToCall>
			<WhenToImpl>whatever</WhenToImpl>
			<Methods>
				<Method name="X">
					<Short>the X property</Short>
					<Description>This is a somewhat longer description of the X property.</Description>
					<Parameters/>
					<ReturnValue>///todo: discuss the possible return values</ReturnValue>
					<SampleCode>///todo: write some sample code</SampleCode>
					<Links/>
				</Method>
				<Method name="Y">
					<Short>the Y property</Short>
					<Description>This is a somewhat longer description of the Y property.</Description>
					<Parameters/>
					<ReturnValue>///todo: discuss the possible return values</ReturnValue>
					<SampleCode>///todo: write some sample code</SampleCode>
					<Links/>
				</Method>
				<Method name="Bar">
					<Short>the Bar method</Short>
					<Description>This is a somewhat longer description ofthe Bar method.</Description>
					<Parameters/>
					<ReturnValue>///todo: discuss the possible return values</ReturnValue>
					<SampleCode>///todo: write some sample code</SampleCode>
					<Links/>
				</Method>
			</Methods>
			<Links/>
		</Interface>
	</Interfaces>
	<CoClasses>
		<CoClass name="Foo">
			<Short>This is a short description of the Foo coclass.</Short>
			<Description>This is a long description of the Foo coclass.  What does it do?  Who would use it?  When?  Why should anyone care?  How is it implemented?  Yadda yadda yadda...</Description>
			<ProgID>Acme.Foo</ProgID>
			<HowToInstantiate>Objects of type Foo can be instantiated directly, via its CLSID or ProgID.</HowToInstantiate>
			<SampleCode><![CDATA[var myFoo = new ActiveXObject("Acme.Foo");]]></SampleCode>
			<Links>
				<Link href="../whatever/something.html">Some other interesting coclass</Link>
			</Links>
		</CoClass>
	</CoClasses>
	<Links>
		<Link href="../whatever/something.html">Some other COM library</Link>
	</Links>
</Library>
